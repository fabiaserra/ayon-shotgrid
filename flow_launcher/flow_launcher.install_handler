#!/bin/bash
#
#
#    This script attempts to register the Flow Launcher as the protocol handler for
#    links that look like flow-launcher://blah.
#
#    It should be sufficient for gnome apps like pidgin and kde apps
#    like konqueror. Firefox seems to pay attention to the gnome
#    settings at least to the degree that it recognizes links of the
#    form flow-launcher://blah as hot-links, but it may still ask you to
#    select the application the first time you click on one.
#
#   Gnome: register flow-launcher protocol handler
#
echo "Installing flow-launcher protocol handler for Gnome."

gconfTool=$(which gconftool-2)

if [ $? -eq 0 ]; then
    gconftool-2 --set --type=string /desktop/gnome/url-handlers/flow-launcher/command "gnome-terminal -- bash -c \"mkdir -p /ax_logs/$(hostname)/ayon && /usr/bin/ayon run /pipe/ayon/flow_launcher/flow_launcher.py %U | tee /ax_logs/$(hostname)/ayon/console_$(date +\"%Y%m%d_%H%M%S\").log; echo 'Process finished with exit code $?'; echo 'Press any key to close...'; read -n 1; exec bash\""
    gconftool-2 --set --type=bool /desktop/gnome/url-handlers/flow-launcher/enabled true
    gconftool-2 --set --type=bool /desktop/gnome/url-handlers/flow-launcher/need-terminal false
else
    echo "WARNING: gconftool-2 not found: skipping gnome url-handler registration."
fi

#
#   KDE: register flow-launcher protocol handler
#   If you want to install this system wide copy the flow-launcher.protocol file to /usr/share/kde4/services/
#
echo "Installing flow-launcher protocol handler for KDE."

kdeProtoDir="$HOME/.kde/share/services"
if [ -e "$HOME/.kde4/share/services" ]; then
    kdeProtoDir="$HOME/.kde4/share/services"
fi
if [ ! -z "$KDEDIR" ]; then
    kdeProtoDir="$KDEDIR/share/services"
fi

if [ ! -e "$kdeProtoDir" ]; then
    mkdir -p "$kdeProtoDir"
fi

if [ -e "$kdeProtoDir" ]; then
    kdeProtoFile="$kdeProtoDir/flow-launcher.protocol"
    rm -f "$kdeProtoFile"
    cat > "$kdeProtoFile" << EOF
[Protocol]
exec=gnome-terminal -- bash -c "mkdir -p /ax_logs/$(hostname)/ayon && /usr/bin/ayon run /pipe/ayon/flow_launcher/flow_launcher.py %U | tee /ax_logs/$(hostname)/ayon/console_$(date +\"%Y%m%d_%H%M%S\").log; echo 'Process finished with exit code $?'; echo 'Press any key to close...'; read -n 1; exec bash"
protocol=flow-launcher
input=none
output=none
helper=true
listing=false
reading=false
writing=false
makedir=false
deleting=false
EOF
    echo "Successfully created ${kdeProtoFile}"
else
    echo "WARNING: can't find or create KDE protocol directory: ${kdeProtoDir}:  skipping KDE url-handler registration."
fi

#
#   Gnome part 2 for xdg/Chrome: register flow-launcher protocol handler
#   If you want to install this system wide run the desktop-file-install as sudo/root
#   and remove the --dir= bit.
#
echo "Installing flow-launcher protocol handler for XDG"

desktopInstall=$(which desktop-file-install)

if [ $? -eq 0 ]; then
    xdgDir="$HOME/.local/share/applications"
    if [ ! -e "$xdgDir" ]; then
        mkdir -p "$xdgDir"
    fi

    if [ -e "$xdgDir" ]; then
        xdgFile="$xdgDir/flow-launcher.desktop"
        rm -f "$xdgFile"
        cat > "$xdgFile" << EOF
[Desktop Entry]
Name=FlowLauncher
GenericName=FlowLauncher
Comment=Launch AYON launcher applications from Flow
Exec=gnome-terminal -- bash -c "mkdir -p /ax_logs/$(hostname)/ayon && /usr/bin/ayon run /pipe/ayon/flow_launcher/flow_launcher.py %U | tee /ax_logs/$(hostname)/ayon/console_$(date +\"%Y%m%d_%H%M%S\").log; echo 'Process finished with exit code $?'; echo 'Press any key to close...'; read -n 1; exec bash"
NoDisplay=true
Terminal=false
Type=Application
MimeType=x-scheme-handler/flow-launcher;application/flow-launcher;
Keywords=FlowLauncher;
Actions=Staging;

[Desktop Action Staging]
Name=FlowLauncher (staging)
Exec=gnome-terminal -- bash -c "mkdir -p /ax_logs/$(hostname)/ayon && /usr/bin/ayon run /pipe/ayon/flow_launcher/flow_launcher.py %U | tee /ax_logs/$(hostname)/ayon/console_$(date +\"%Y%m%d_%H%M%S\").log; echo 'Process finished with exit code $?'; echo 'Press any key to close...'; read -n 1; exec bash"
EOF
        echo "Successfully created ${xdgFile}"
    else
        echo "WARNING: can't find or create XDG directory: ${xdgDir}:  skipping XDG url-handler registration."
    fi

    desktop-file-install "$xdgFile" --rebuild-mime-info-cache --dir="$xdgDir"
else
    echo "WARNING: desktop-file-install not found: skipping xdg-handler registration."
fi

echo "Done."
