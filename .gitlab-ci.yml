include:
  - project: 'shared/ci-templates'
    file: 'ayon-addon-util.yml'
    ref: 'master'

stages:
  - init
  - tag
  - create
  - upload
  - build
  - deploy

deploy-flow-launcher:
  tags:
    - mnt-pipe
  image: alpine:latest
  stage: deploy
  needs: []
  script:
    - apk add rsync
    - rsync -avh --chmod=777 --chown=995:776523089 $CI_PROJECT_DIR/flow_launcher/flow_launcher.py /pipe/ayon/flow_launcher/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - flow_launcher/*
    - when: manual

.git-setup:
  before_script:
    - apk add --no-cache git
    - URL_WITH_AUTH="https://gitlab-ci-token:${CI_TOKEN}@$(echo $CI_PROJECT_URL | sed 's|https://||')"
    - git clone "${URL_WITH_AUTH}.git" "${CI_COMMIT_SHA}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_LOGIN}"
    - cd "${CI_COMMIT_SHA}"
    - git checkout -B ${CI_COMMIT_BRANCH} remotes/origin/${CI_COMMIT_BRANCH} --

.build-image: &build-image
  stage: build
  needs: ["get-version"]
  dependencies:
    - get-version
  tags:
    - on-prem
  image: docker:25.0.4-cli
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - name: docker:25.0.4-dind
      alias: docker
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - export GITLAB_IMAGE=${CI_REGISTRY_IMAGE}/ayon-shotgrid-${SERVICE_NAME}:${VERSION}-${CI_COMMIT_SHORT_SHA}
    - echo "${GITLAB_IMAGE}"
  script:
    - >
      docker build 
      -t "${GITLAB_IMAGE}" 
      -f "${CI_PROJECT_DIR}/services/${SERVICE_NAME}/Dockerfile" 
      --build-arg CW_GROUP_CI_TOKEN=${CW_GROUP_CI_TOKEN} 
      ${CI_PROJECT_DIR}/services
    - docker push "${GITLAB_IMAGE}"
  rules:
    - if: $CI_COMMIT_BRANCH == "release/alkemyx"
      changes:
        - services/**/*
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual

build-shotgrid-leecher:
  <<: *build-image
  variables:
    SERVICE_NAME: leecher

build-shotgrid-processor:
  <<: *build-image
  variables:
    SERVICE_NAME: processor

build-shotgrid-transmitter:
  <<: *build-image
  variables:
    SERVICE_NAME: transmitter

update-helm-chart:
  stage: deploy
  needs: 
    - get-version
    - build-shotgrid-transmitter
    - build-shotgrid-leecher
    - build-shotgrid-processor
  dependencies:
    - get-version
    - build-shotgrid-transmitter
    - build-shotgrid-leecher
    - build-shotgrid-processor
  tags:
    - kube
  extends: .git-setup
  image: alpine:latest
  script:
    # The last part of this syntax is to avoid replacing multiple 'tag' entries and just do it on the first one it finds
    # which in our values.yaml happens to be the 'ayon' artifact that we are interested in replacing
    - 'sed -i "/tag:.*/{s//tag: ${VERSION}-${CI_COMMIT_SHORT_SHA}/}" k8s/ayon_shotgrid/values.yaml'
    - 'sed -i "s/version:.*/version: ${VERSION}/" k8s/ayon_shotgrid/Chart.yaml'
    - 'sed -i "s/appVersion:.*/appVersion: \"${VERSION}-${CI_COMMIT_SHORT_SHA}\"/" k8s/ayon_shotgrid/Chart.yaml'
    - git add k8s/ayon_shotgrid/values.yaml
    - git add k8s/ayon_shotgrid/Chart.yaml
    - git commit -m "Update Helm chart with new tag [ci skip]"
    - git diff-index --quiet HEAD || git commit -am '[skip ci] values.yml update'
    - git push origin "${CI_COMMIT_BRANCH}"
  rules:
    - if: $CI_COMMIT_BRANCH == "release/alkemyx"
      changes:
        - services/**/*
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual