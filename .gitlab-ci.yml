include:
  - project: 'shared/ci-templates'
    file: 'ayon-addon-util.yml'
    ref: 'ayon-addon'

stages:
  - init
  - tag
  - create
  - build
  - deploy

build-shotgrid-leecher:
  stage: build
  needs: ["get-version"]
  dependencies:
    - get-version
  tags:
    - kube
  image:
    name: gcr.io/kaniko-project/executor:v1.23.0-debug
    entrypoint: [""]
  script:
    - CI_COMMIT_BRANCH_SAFE="${CI_COMMIT_BRANCH////-}" && echo "$CI_COMMIT_BRANCH_SAFE"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services"
      --dockerfile "${CI_PROJECT_DIR}/services/leecher/Dockerfile"
      --build-arg CW_GROUP_CI_TOKEN=${CW_GROUP_CI_TOKEN}
      --destination "${CI_REGISTRY_IMAGE}/ayon-shotgrid-leecher:${VERSION}-${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "release/alkemyx"
      changes:
        - services/**/*
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual

build-shotgrid-processor:
  stage: build
  needs: ["get-version"]
  dependencies:
    - get-version
  tags:
    - kube
  image:
    name: gcr.io/kaniko-project/executor:v1.23.0-debug
    entrypoint: [""]
  script:
    - CI_COMMIT_BRANCH_SAFE="${CI_COMMIT_BRANCH////-}" && echo "$CI_COMMIT_BRANCH_SAFE"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services"
      --dockerfile "${CI_PROJECT_DIR}/services/processor/Dockerfile"
      --build-arg CW_GROUP_CI_TOKEN=${CW_GROUP_CI_TOKEN}
      --destination "${CI_REGISTRY_IMAGE}/ayon-shotgrid-processor:${VERSION}-${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "release/alkemyx"
      changes:
        - services/**/*
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual

build-shotgrid-transmitter:
  stage: build
  needs: ["get-version"]
  dependencies:
    - get-version
  tags:
    - kube
  image:
    name: gcr.io/kaniko-project/executor:v1.23.0-debug
    entrypoint: [""]
  script:
    - CI_COMMIT_BRANCH_SAFE="${CI_COMMIT_BRANCH////-}" && echo "$CI_COMMIT_BRANCH_SAFE"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services"
      --dockerfile "${CI_PROJECT_DIR}/services/transmitter/Dockerfile"
      --build-arg CW_GROUP_CI_TOKEN=${CW_GROUP_CI_TOKEN}
      --destination "${CI_REGISTRY_IMAGE}/ayon-shotgrid-transmitter:${VERSION}-${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH == "release/alkemyx"
      changes:
        - services/**/*
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual

.git-setup: &git-setup
  before_script:
    - apk add --no-cache git
    - URL_WITH_AUTH="https://gitlab-ci-token:${CI_TOKEN}@$(echo $CI_PROJECT_URL | sed 's|https://||')"
    - git clone "${URL_WITH_AUTH}.git" "${CI_COMMIT_SHA}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_LOGIN}"
    - cd "${CI_COMMIT_SHA}"
    - git checkout -B ${CI_COMMIT_BRANCH} remotes/origin/${CI_COMMIT_BRANCH} --

update-helm-chart:
  stage: deploy
  dependencies:
    - get-version
    - build-shotgrid-transmitter
    - build-shotgrid-leecher
    - build-shotgrid-processor
  tags:
    - kube
  extends: .git-setup
  image: alpine:latest
  script:
    # The last part of this syntax is to avoid replacing multiple 'tag' entries and just do it on the first one it finds
    # which in our values.yaml happens to be the 'ayon' artifact that we are interested in replacing
    - 'sed -i "/tag:.*/{s//tag: ${VERSION}-${CI_COMMIT_SHORT_SHA}/}" k8s/ayon_shotgrid/values.yaml'
    - 'sed -i "s/version:.*/version: ${VERSION}/" k8s/ayon_shotgrid/Chart.yaml'
    - 'sed -i "s/appVersion:.*/appVersion: \"${VERSION}-${CI_COMMIT_SHORT_SHA}\"/" k8s/ayon_shotgrid/Chart.yaml'
    - git add k8s/ayon_shotgrid/values.yaml
    - git add k8s/ayon_shotgrid/Chart.yaml
    - git commit -m "Update Helm chart with new tag [ci skip]"
    - git diff-index --quiet HEAD || git commit -am '[skip ci] values.yml update'
    - git push origin "${CI_COMMIT_BRANCH}"